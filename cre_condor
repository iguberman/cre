#!/usr/bin/env escript
%% -*- erlang -*-
%%! debug

-author( "JÃ¶rgen Brandt <brandjoe@hu-berlin.de>" ).

-define( CONF, #{base_dir => "/tmp/cf"} ).
-define( STATE_DIR, "state" ).
-define( REPO_DIR, "repo" ).
-define( WORK_DIR, "work" ).
-define( SAFELY( F, X ), case apply( F, [X] )


%% main/1
%
main( [] ) ->

  % Query Definitions =======================================
  
  TaskName = "bwa-index",
  
  % CRE Definitions =========================================
  
  Prefix = "1",
  
  % Initialization ==========================================

  BaseDir = maps:get( base_dir, ?CONF ),
  StateDir = string:join( [BaseDir, ?STATE_DIR], "/" ), 
  RepoDir = string:join( [BaseDir, ?REPO_DIR], "/" ),
  WorkDir = string:join( [BaseDir, ?WORK_DIR], "/" ),
  
  os:cmd( ["rm -rf ", StateDir] ),
  os:cmd( ["rm -rf ", RepoDir] ),
  os:cmd( ["rm -rf ", WorkDir] ),

  case filelib:ensure_dir( [SubmitDir, "/"] ) of
    {error, R1} -> error( {R1, ensure_dir, [SubmitDir, "/"]} ),
    ok ->
    
      case filelib:ensure_dir( [RepoDir, "/"] ) of
        {error, R2} -> error( {R2, ensure_dir, [RepoDir, "/"]

  io:format( "Hello world.~n" ).
  
  
  
get_submit( StateDir, TaskName, Prefix ) ->

  {Y, M, D} = date(),
  Date   = io_lib:format( "~4..0B-~2..0B-~2..0B", [Y, M, D] ),

  Opt = get_opt_string(),
  Infile = string:join( get_infile_list(), "," ),
  ID = string:join( [Date, TaskName, Prefix], "_" ),
  LogFile      = string:join( [StateDir, [ID, ".log"]], "/" ),
  SubFile      = string:join( [StateDir, [ID, ".sub"]], "/" ),

  Sub = string:join( ["universe                = vanilla",
                      ["arguments               = \"", Opt, "\""],
                      ["transfer_input_files    = ", Infile],
                      "should_transfer_files   = IF_NEEDED",
                      "when_to_transfer_output = ON_EXIT",
                      ["log                     = ", LogFile],
                      ["output                  = ", OutFile],
                      "environment             = \"HOME=. PATH=/bin:/usr/local/bin",
                      "queue"], "\n" ),
  {SubFile, Sub}.
                
                
   
